@using Microsoft.AspNetCore.Identity;

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
        var firstName = string.Empty;
        var user = await UserManager.GetUserAsync(User);
    if (user != null)
        {
           firstName = ((ApplicationUser)user).GivenName;
        }
    
    
    <li class="nav-item">
        <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" style="color:#c2c7d0 !important" title="Manage">
            Hello @(firstName ?? "User")!
        </a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link text-dark login-btn">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>

<style>
    .login-btn{
    width: fit-content !important;
    transition: width ease-in-out .3s;
}
.text-dark {
    color: #c2c7d0 !important;
}
</style>
